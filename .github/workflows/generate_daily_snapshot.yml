on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '00 0 * * *'

name: Generate daily snapshot

jobs:
  generate-rc:
    name: Generate daily snapshot from develop
    runs-on: ubuntu-latest
    steps:
      - name: Prepare environment variables
        run: |
          # Change the variables here to the needed repos and branches
          export MODULE=app
          export FLAVOR=""
          export RELEASE_TRACK=internal
          export DEFAULT_PUBLISHING_LANGUAGE=es-ES

          echo "MODULE=$MODULE" >> "$GITHUB_ENV"
          echo "FLAVOR=$FLAVOR" >> "$GITHUB_ENV"
          echo "RELEASE_TRACK=$RELEASE_TRACK" >> "$GITHUB_ENV"
          echo "DEFAULT_PUBLISHING_LANGUAGE=$DEFAULT_PUBLISHING_LANGUAGE" >> "$GITHUB_ENV"
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.7.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set-up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Checkout develop
        uses: actions/checkout@v2
        with:
          ref: develop
          fetch-depth: 0 # Whole repo history
      - name: Fetch tags
        run: git fetch origin +refs/tags/*:refs/tags/*
      - name: Check if there has been new commits in the last 24 hours
        id: check-new-commits
        uses: adriangl/check-new-commits-action@v1.0.1
        with:
          token: ${{Â secrets.GITHUB_TOKEN }}
          branch: develop
          seconds: 86400 # one day
      - name: Cancel job if no new commits have been found in the last 24 hours
        if: ${{ steps.check-new-commits.outputs.has-new-commits != 'true' }}
        uses: andymckay/cancel-action@0.2
      - name: Restore caches
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run detekt
        run: |
          ./gradlew detekt
      - name: Dump keystore from secret
        id: dump_keystore
        env:
          RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
        run: |
          echo $RELEASE_KEYSTORE | base64 -d > keystore.jks
          RELEASE_KEYSTORE_PATH=$(pwd)/keystore.jks
          echo ::set-output name=release_keystore_path::"${RELEASE_KEYSTORE_PATH}" # saved as output of the step
      - name: Dump Google Play service account from secret
        id: dump_gpp_service_account
        env:
          GPP_SERVICE_ACCOUNT: ${{ secrets.GPP_SERVICE_ACCOUNT }}
        run: |
          echo $GPP_SERVICE_ACCOUNT | base64 -d > gpp-service-account.json
          GPP_SERVICE_ACCOUNT_PATH=$(pwd)/gpp-service-account.json
          echo ::set-output name=gpp_service_account_path::"${GPP_SERVICE_ACCOUNT_PATH}" # saved as output of the step
      - name: Prepare release notes
        run: |
          # For GitHub release
          ./scripts/ci/deploy/generate_release_notes.sh release/release-notes.txt
          # For Google Play release (don't forget to configure the Google Play Publisher plugin for this)
          FLAVOR_APK_FOLDER=$(if [ -z "$FLAVOR" ]; then echo "release"; else echo "${FLAVOR}/release"; fi)
          PUBLISHING_LANGUAGE=$(if cat "${MODULE}"/src/"${FLAVOR_APK_FOLDER}"/play/default-language.txt ; then echo "OK" ; else echo "${DEFAULT_PUBLISHING_LANGUAGE}" ; fi)
          ./scripts/ci/deploy/generate_release_notes.sh "${MODULE}"/src/"${FLAVOR_APK_FOLDER}"/play/release-notes/"${PUBLISHING_LANGUAGE}"/"${RELEASE_TRACK}".txt 500
      - name: Update tag using tag-flow
        id: update_tag
        run: |
          ./scripts/ci/deploy/update_tags.sh

          ARTIFACTS_TAG=$(git describe --abbrev=0 --tags)
          echo ::set-output name=artifacts_tag::"${ARTIFACTS_TAG}" # saved as output of the step
      - name: Generate daily snapshot and publish it
        id: generate_artifacts
        env:
          RELEASE_KEYSTORE_PATH: ${{ steps.dump_keystore.outputs.release_keystore_path }}
          RELEASE_KEYSTORE_PWD: ${{ secrets.RELEASE_KEYSTORE_PWD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEYSTORE_ALIAS_PWD: ${{ secrets.RELEASE_KEYSTORE_ALIAS_PWD }}
          GPP_SERVICE_ACCOUNT_PATH: ${{ steps.dump_gpp_service_account.outputs.gpp_service_account_path }}
        run: |
          ./scripts/ci/deploy/generate_build.sh "$MODULE" "$FLAVOR" "$RELEASE_TRACK"
      - name: Store build artifacts into workspace
        uses: actions/upload-artifact@v2.2.2
        with:
          name: release
          path: release/
      - name: Create a pre-release in Github
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          bodyFile: "release/release-notes.txt"
          artifacts:
            "release/artifacts/*"
          prerelease: true
          tag: ${{ steps.update_tag.outputs.artifacts_tag }}
